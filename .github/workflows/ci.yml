name: CI/CD Pipeline

# This workflow builds the app for both local deployment and GitHub Pages
# - Local build: Standard build with base path '/'
# - GitHub Pages build: Build with base path '/dart-score-manager/' for GitHub Pages deployment

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint --if-present

    - name: Run unit tests
      run: npm run test:coverage

  e2e-tests:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Build application
      run: npm run build

    - name: Run E2E tests
      run: npm run test:e2e

    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  firefox-tests:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Build application
      run: npm run build

    - name: Run Firefox E2E tests
      run: npm run test:e2e:firefox

    - name: Upload Firefox test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: firefox-test-results
        path: playwright-report/
        retention-days: 30

  visual-tests:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Build application
      run: npm run build

    - name: Run Visual Regression Tests
      run: npx playwright test --project=visual-chromium --project=visual-mobile

    - name: Upload Visual Test Results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: visual-test-results
        path: test-results/
        retention-days: 30

    - name: Upload Visual Test Screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: visual-screenshots
        path: playwright-report/
        retention-days: 30

  build:
    runs-on: ubuntu-latest
    needs: [test, e2e-tests, firefox-tests, visual-tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application (local)
      run: npm run build

    - name: Build application (GitHub Pages)
      run: npm run build:gh-pages
      # This build includes the /dart-score-manager/ base path for GitHub Pages

    - name: Verify GitHub Pages build configuration
      run: |
        echo "Verifying GitHub Pages build configuration..."
        if grep -q "dart-score-manager" build/index.html; then
          echo "✅ GitHub Pages build verified - base path correctly set to /dart-score-manager/"
        else
          echo "❌ GitHub Pages build verification failed - missing base path"
          exit 1
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: build/

    - name: Upload GitHub Pages build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: gh-pages-build
        path: build/

  pages:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    permissions:
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Download GitHub Pages build artifacts
      uses: actions/download-artifact@v4
      with:
        name: gh-pages-build
        path: build/

    - name: Verify GitHub Pages build for deployment
      run: |
        echo "Verifying GitHub Pages build before deployment..."
        if grep -q "dart-score-manager" build/index.html; then
          echo "✅ GitHub Pages build verified - ready for deployment"
        else
          echo "❌ GitHub Pages build verification failed - cannot deploy"
          exit 1
        fi

    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: build/

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
